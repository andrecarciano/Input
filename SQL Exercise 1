-- 1 Criação de Tabelas

create table Aluno (
	ID_ALU int IDENTITY(1,1), 
	Nome varchar(50), 
	DtNascimento date, 
	Endereço varchar(50), 
	Sala int
);

create table Sala(
	ID_SAL int IDENTITY(1,1),
	Descrição varchar(50),
	ID_BLO int,
	Serie int
);

create table Bloco(
	ID_BLO int IDENTITY(1,1),
	Descricao varchar(15)
);

create table Professor(
	ID_PROF int IDENTITY(1,1),
	Nome varchar(50),
	DtNascimento date
);

create table ProfSala(
	ID_PROF int NOT NULL ,
	ID_SAL int NOT NULL 
);

create table Prova(
	ID_PRO int IDENTITY(1,1),
	ID_ALU int,
	Data date,
	Nota decimal
);


-- 2 Criação de Chave Primaria e Index

ALTER TABLE Aluno ADD PRIMARY KEY(ID_ALU);
create index idx_Aluno on Aluno(Nome,DtNascimento,Sala);

ALTER TABLE Sala ADD PRIMARY KEY(ID_SAL);
create index idx_Sala on Sala(Descrição, ID_BLO);

ALTER TABLE Bloco ADD PRIMARY KEY(ID_BLO);
create index idx_Bloco on Bloco(Descricao);

ALTER TABLE Professor ADD PRIMARY KEY(ID_PROF);
create index idx_Professor on Professor(Nome,DtNascimento);

ALTER TABLE Prova ADD PRIMARY KEY(ID_PRO);
create index idx_Prova on Prova(ID_ALU,Data, Nota);

ALTER TABLE ProfSala ADD PRIMARY KEY (ID_PROF, ID_SAL);



-- 3 Inserir Informações

INSERT INTO Aluno(Nome, DtNascimento, Endereço, Sala) VALUES ('Rubersvaldo Silva', '1985-03-10', 'Av. Lapa, 1000', 9); 

INSERT INTO Aluno(Nome, DtNascimento, Endereço, Sala) VALUES ('Godofredo dos Santos Veiga', '1989-01-03', 'Alameda dos sucumplinios, 332', 8); 

INSERT INTO Aluno(Nome, DtNascimento, Endereço, Sala) VALUES ('Filomena Rubicunda Rosa', '1992-06-22', 'Travessa dos Zikas, 157', 8);

INSERT INTO Aluno(Nome, DtNascimento, Endereço, Sala) VALUES ('Cleiton', '1988-05-26', 'Rua Treze, 13', 7); 

INSERT INTO Bloco(Descricao) VALUES ('Bloco A'); 

INSERT INTO Bloco(Descricao) VALUES ('Bloco B'); 

INSERT INTO Bloco(Descricao) VALUES ('Bloco C'); 

INSERT INTO Bloco(Descricao) VALUES ('Bloco D'); 

INSERT INTO Bloco(Descricao) VALUES ('Bloco E'); 

INSERT INTO Professor(Nome,DtNascimento) VALUES ('Aloprado dos Santos','1966-05-05');

INSERT INTO Professor(Nome,DtNascimento) VALUES ('Charles Xavier','1948-09-18');

INSERT INTO Professor(Nome,DtNascimento) VALUES ('Tiburcio Tibério','1962-07-11');

INSERT INTO Professor(Nome,DtNascimento) VALUES ('Utonio Oinotu','1966-05-05');

INSERT INTO Prova (ID_ALU,Data) VALUES (2,'2023-04-25');

INSERT INTO Sala(Descrição, ID_BLO, Serie) VALUES ('Sala 01 - Informatica', 1,1);

INSERT INTO Sala(Descrição, ID_BLO, Serie) VALUES ('Sala 02 - Física Quantica', 1,3);

INSERT INTO ProfSala VALUES(6,2);

INSERT INTO ProfSala VALUES(5,1);

INSERT INTO Prova(ID_ALU,Data,Nota) VALUES (1, '2023-04-15', 5)

INSERT INTO Prova(ID_ALU,Data,Nota) VALUES (2, '2023-04-15', 10)

INSERT INTO Prova(ID_ALU,Data,Nota) VALUES (3, '2023-04-1'5, 8)

INSERT INTO Prova(ID_ALU,Data,Nota) VALUES (4, '2023-04-15', 7)

INSERT INTO Prova(ID_ALU,Data,Nota) VALUES (5, '2023-04-15', 6)


-- 3.1 CRIAÇÃO DE SCHEMA BKP

CREATE SCHEMA BKP; 



-- 3.2 BACKUP DAS TABELAS NO SCHEMA BKP

SELECT * INTO BKP.Aluno FROM Aluno;
SELECT * INTO BKP.Bloco FROM Bloco;
SELECT * INTO BKP.Professor FROM Professor;
SELECT * INTO BKP.Prova FROM Prova;
SELECT * INTO BKP.Sala FROM Sala;
SELECT * INTO BKP.ProfSala FROM ProfSala;


-- 3.3 Alteração de Registros Originais

UPDATE Aluno SET Nome = 'Francisco Chico' Where ID_ALU = 1;
UPDATE Aluno SET Nome = 'Cleitinho' Where ID_ALU = 4;


-- 3.4 Exclusao de Registros das Tabelas Originais

DELETE FROM Aluno WHERE ID_ALU = 1;
DELETE FROM Bloco WHERE ID_BLO = 4;
DELETE FROM Bloco WHERE ID_BLO = 5;


-- 4 Exclusao de Todos os registros das tabelas originais

DELETE FROM Aluno;
DELETE FROM Bloco;
DELETE FROM Professor;
DELETE FROM ProfSala;
DELETE FROM Prova;
DELETE FROM Sala;


-- 4.1 Retornar os registros Atraves do BKP

SET IDENTITY_INSERT Aluno ON;
INSERT INTO Aluno(ID_ALU, Nome, DtNascimento, Endereço, Sala) 
SELECT ID_ALU, Nome, DtNascimento, Endereço, Sala FROM BKP.Aluno;
SET IDENTITY_INSERT Aluno OFF;

SET IDENTITY_INSERT Bloco ON;
INSERT INTO Bloco(ID_BLO, Descricao)
SELECT ID_BLO, Descricao FROM BKP.Bloco;
SET IDENTITY_INSERT Bloco OFF;

SET IDENTITY_INSERT Professor ON;
INSERT INTO Professor(DtNascimento, ID_PROF, Nome)
SELECT DtNascimento, ID_PROF, Nome FROM BKP.Professor;
SET IDENTITY_INSERT Professor OFF;

SET IDENTITY_INSERT Prova ON;
INSERT INTO Prova(Data, ID_ALU, ID_PRO, Nota)
SELECT Data, ID_ALU, ID_PRO, Nota FROM BKP.Prova;
SET IDENTITY_INSERT Prova OFF;

SET IDENTITY_INSERT Sala ON;
INSERT INTO Sala(Descrição, ID_BLO, ID_SAL, Serie)
SELECT Descrição, ID_BLO, ID_SAL, Serie FROM BKP.Sala;
SET IDENTITY_INSERT Sala OFF;

INSERT INTO ProfSala(ID_PROF, ID_SAL)
SELECT ID_PROF, ID_SAL FROM BKP.ProfSala;

-- 5 Criação de procedure

CREATE PROCEDURE ALU_Bloco(@Bloco INT)
AS BEGIN
SELECT ALU.* FROM Sala SAL 
JOIN Bloco BLO ON SAL.ID_BLO = BLO.ID_BLO 
JOIN Aluno ALU ON SAL.ID_SAL = ALU.Sala
WHERE SAL.BLO = @Bloco
END

-- 5.1
CREATE PROCEDURE NOTA_INF
AS BEGIN
UPDATE Aluno SET Nome = Nome + ' Nota Baixa' 
from Prova 
where Aluno.ID_ALU = Prova.ID_ALU 
and Prova.Nota < 7
END


-- 6 Criação de função escalar

CREATE FUNCTION QTD_PROF_SALA(@SALA INT)
RETURNS INT
AS BEGIN
RETURN (SELECT COUNT(*) FROM ProfSala WHERE ID_SAL=@SALA)
END

-- 7 Criação de Função Tabular

CREATE function AluNotta (@SALA int)
RETURNS TABLE 
AS
RETURN SELECT a.* FROM Aluno a 	join Prova p on a.ID_ALU = p.ID_ALU 
where Sala = @SALA and p.Nota<5


--8 Criação de View

CREATE VIEW AlunoVW7 AS 
SELECT count(*) qtd,a.* FROM Aluno a join Prova p on a.ID_ALU = p.ID_ALU 
where DATEDIFF ( DAY ,a.DtNascimento, GETDATE()  )/365.25  > 7 and Nota > 8
group by Nome,a.ID_ALU, a.DtNascimento, a.Endereço, a.Sala 
having COUNT(a.Nome) >= 5

--9 Criação de Triggers

